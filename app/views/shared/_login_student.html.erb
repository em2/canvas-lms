<% jammit_css :login_student %>
<% @body_classes << "modal" if @body_classes %>
<% js_block do %>
<script>
require([
  'i18nObj' /* I18n.t */,
  'jquery' /* $ */,
  'jquery.fancyplaceholder' /* fancyPlaceholder */,
  'jquery.google-analytics' /* trackPage, trackPageview */,
  'jquery.instructure_forms' /* formSubmit, getFormData, formErrors, errorBox */,
  'jquery.loadingImg' /* loadingImage */,
  'jquery.rails_flash_notifications' /* flashMessage */
], function(I18n, $) {
  
$(document).ready(function() {
  $("#register_link").click(function(){
    $.trackPageview("/clicked_register_on_login_form");
  });
  
  $(".field-with-fancyplaceholder input").fancyPlaceholder();
  $("#forgot_password_form").formSubmit({
    object_name: 'pseudonym_session',
    required: ['unique_id_forgot'],
    beforeSubmit: function(data) {
      $(this).loadingImage();
    },
    success: function(data) {
      $(this).loadingImage('remove');
      $.flashMessage(<%= jt("#pseudonyms.login.password_confirmation_sent", "Password confirmation sent to %{email_address}. Make sure you check your spam box.", '{email_address: $(this).find(".email_address").val()}') %>);
      $(".login_link:first").click();
    },
    error: function(data) {
      $(this).loadingImage('remove');
    }
  });
  $(".forgot_password_link").click(function(event) {
    event.preventDefault();
    $("#login_form").hide();
    $("#forgot_password_form").show();
  });
  $(".login_link").click(function(event) {
    event.preventDefault();
    $("#login_form").show();
    $("#forgot_password_form").hide();
  });
  
  $("#login_form")
    .submit(function(event) {
      var data = $(this).getFormData({object_name: 'pseudonym_session'});
      var success = true;
      if(!data.unique_id || data.unique_id.length < 1) {
        $(this).formErrors({
          unique_id: <%= jt("#pseudonyms.login.invalid_login", 'Invalid login') %>
        });
        success = false;
      }
      return success;
    })
    .find(":text:first")
      .focus().select();
});
});
</script>
<% end %>
<% login_handle_name = @domain_root_account.login_handle_name rescue AccountAuthorizationConfig.default_login_handle_name %>
<% @is_delegated = @domain_root_account.delegated_authentication? if @domain_root_account and @is_delegated.nil? %>
<div id="modal-box">
  <div id="login-background"></div>
  <div id="modal-box-inner">
    <% form_for :pseudonym_session, :url => login_path, :html => {:id => "login_form"} do |f| %>
      <%= link_to "Click to register",  Setting.get_cached("registration_link", "/register_from_website"), :id => 'register_link', :class => 'not_external' if @domain_root_account == Account.default && @domain_root_account.open_registration? && @domain_root_account.no_enrollments_can_create_courses? %>
      <h2 class="ui-helper-hidden-accessible"><%= t('login', 'Login') %></h2>
      <% login_inner_dialog = yield :login_inner_dialog %>
      <%= login_inner_dialog if login_inner_dialog && !login_inner_dialog.strip.empty? %>
      <input type="hidden" name="redirect_to_ssl" value="1"/>
      <div id="login_fields">
        <span class=" field-with-fancyplaceholder"><%= f.label :unique_id, login_handle_name %><%= f.text_field :unique_id, :class => "text", :value => params[:pseudonym_session_student].try(:[], :unique_id) %></span>
        <button type="submit" class="login_button"></button> 
      </div>
    <% end %>
  </div>
</div>
<%= render "shared/login_trailer" %>
